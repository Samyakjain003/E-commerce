server:
  port: 8091

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/order-service
    username: root
    password: rootpass
    drive-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

  zipkin:
    base-url: http://localhost:9411
  sleuth:
    sampler:
      probability: 1.0

  kafka:
    bootstrap-servers: localhost:9092

    template:
      default-topic: notificationTopic

    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: "event:com.samyakj820.orderservice.event.OrderPlacedEvent"

eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

management:
  health:
    circuitbreakers:
      enabled: true

  endpoints:
    web:
      exposure:
        include: health

  endpoint:
    health:
      show-details: always


resilience4j:
  circuitbreaker:
    instances:
      inventory:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 5
        slidingWindowType: COUNT_BASED

  timelimiter:
    instances:
      inventory:
        timeout-duration: 3s

  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 5s